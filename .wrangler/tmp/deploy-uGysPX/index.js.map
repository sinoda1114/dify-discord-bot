{
  "version": 3,
  "sources": ["../../../node_modules/discord-interactions/src/util.ts", "../../../node_modules/discord-interactions/src/components.ts", "../../../node_modules/discord-interactions/src/index.ts", "../../../src/index.ts"],
  "sourceRoot": "C:\\Users\\sinod\\OneDrive\\Dev\\dify-discord-bot\\.wrangler\\tmp\\deploy-uGysPX",
  "sourcesContent": [null, null, null, "import { InteractionResponseType, InteractionType, verifyKey } from 'discord-interactions';\n\ninterface Env {\n  DISCORD_TOKEN: string;\n  DISCORD_PUBLIC_KEY: string;\n  DIFY_API_KEY: string;\n  DIFY_API_ENDPOINT: string;\n}\n\nasync function sendFollowupMessage(applicationId: string, token: string, content: string, env: Env) {\n  console.log('Sending followup message:', { applicationId, content });\n  await fetch(`https://discord.com/api/v10/webhooks/${applicationId}/${token}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ content }),\n  });\n}\n\nexport default {\n  async fetch(request: Request, env: Env): Promise<Response> {\n    try {\n      if (request.method !== 'POST') {\n        return new Response('Method not allowed', { status: 405 });\n      }\n\n      const signature = request.headers.get('x-signature-ed25519');\n      const timestamp = request.headers.get('x-signature-timestamp');\n      const body = await request.clone().text();\n\n      if (!signature || !timestamp || !env.DISCORD_PUBLIC_KEY) {\n        console.error('Missing verification headers or DISCORD_PUBLIC_KEY');\n        return new Response('Missing verification headers', { status: 401 });\n      }\n\n      const isValid = await verifyKey(body, signature, timestamp, env.DISCORD_PUBLIC_KEY);\n      if (!isValid) {\n        console.error('Invalid signature');\n        return new Response('Invalid signature', { status: 401 });\n      }\n\n      const interaction = JSON.parse(body);\n      console.log('Received interaction:', interaction);\n\n      // Ping\u30EA\u30AF\u30A8\u30B9\u30C8\u306E\u51E6\u7406\n      if (interaction.type === InteractionType.PING) {\n        return new Response(JSON.stringify({\n          type: InteractionResponseType.PONG\n        }), {\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n\n      // \u30B3\u30DE\u30F3\u30C9\u306E\u51E6\u7406\uFF08type: 2\u306FAPPLICATION_COMMAND\u3092\u8868\u3059\uFF09\n      if (interaction.type === 2) {\n        const message = interaction.data.options?.[0]?.value;\n        console.log('Processing command with message:', message);\n\n        try {\n          console.log('Dify API Key:', env.DIFY_API_KEY ? '\u8A2D\u5B9A\u3055\u308C\u3066\u3044\u307E\u3059' : '\u8A2D\u5B9A\u3055\u308C\u3066\u3044\u307E\u305B\u3093');\n          console.log('Dify Endpoint:', env.DIFY_API_ENDPOINT);\n          \n          const difyRequestBody = {\n            query: message,\n            response_mode: \"blocking\",\n            conversation_id: interaction.member.user.id,\n            user: interaction.member.user.id,\n            inputs: {},\n            stream: false\n          };\n          console.log('Sending request to Dify:', difyRequestBody);\n\n          const difyResponse = await fetch(env.DIFY_API_ENDPOINT, {\n            method: 'POST',\n            headers: {\n              'Authorization': `Bearer ${env.DIFY_API_KEY}`,\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(difyRequestBody)\n          });\n\n          console.log('Dify response status:', difyResponse.status);\n          \n          if (!difyResponse.ok) {\n            const errorText = await difyResponse.text();\n            console.error('Dify error response:', errorText);\n            throw new Error(`Dify API error: ${difyResponse.status} - ${errorText}`);\n          }\n\n          const difyData = await difyResponse.json();\n          console.log('Dify success response:', difyData);\n\n          return new Response(JSON.stringify({\n            type: InteractionResponseType.CHANNEL_MESSAGE_WITH_SOURCE,\n            data: {\n              content: `<@${interaction.member.user.id}>\u3055\u3093\u3001${difyData.answer || '\u30EC\u30B9\u30DD\u30F3\u30B9\u304C\u7A7A\u3067\u3057\u305F'}`\n            }\n          }), {\n            headers: { 'Content-Type': 'application/json' }\n          });\n        } catch (error) {\n          console.error('Error details:', error);\n          return new Response(JSON.stringify({\n            type: InteractionResponseType.CHANNEL_MESSAGE_WITH_SOURCE,\n            data: {\n              content: `\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F: ${error.message}`\n            }\n          }), {\n            headers: { 'Content-Type': 'application/json' }\n          });\n        }\n      }\n\n      return new Response('Unknown interaction type', { status: 400 });\n    } catch (error) {\n      console.error('Worker error:', error);\n      return new Response('Internal Server Error', { status: 500 });\n    }\n  }\n};"],
  "mappings": "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",
  "names": ["crypto", "MessageComponentTypes", "ButtonStyleTypes", "ChannelTypes", "TextStyleTypes", "InteractionType", "InteractionResponseType", "InteractionResponseFlags", "verifyKey"]
}
